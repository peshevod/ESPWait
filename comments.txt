1. From the directory "components" start git clone --recursive https://github.com/espressif/esp-aws-iot
2. Copy to main/certs files certificate.pem.crt private.pem.key

3. File d:\Espressif\esp-wolfssl\port\user-settings.h

#define WOLFSSL_TRUST_PEER_CERT
#undef FP_MAX_BITS
#define FP_MAX_BITS 8192

#define WOLFSSL_MAX_STRENGTH
#define WOLFSSL_TLS13
#define WOLFSSL_EITHER_SIDE

if using SPIRAM uncomment:
#define NO_WOLFSSL_ESP32WROOM32_CRYPT_AES
#define NO_WOLFSSL_ESP32WROOM32_CRYPT_RSA_PRI

4. File d:\Espressif\esp-wolfssl\wolfssl\wolfssl\wolfcrypt\settings.h
After #if defined(WOLFSSL_ESPIDF) comment out #define NO_WOLFSSL_DIR

5. On sdcard create certs directory and place here CA certificate for server oauth2.googleapis.com - GlobalSignRootCA.cer

6. D:\Espressif\esp-idf-v4.3\components\esp-tls\esp_tls_wolfssl.c
   Correct:
	 wolfTLSv1_2_server_method() -> wolfTLSv1_3_server_method()
	 wolfTLSv1_2_client_method() -> wolfTLSv1_3_client_method()
7. Component my_server: in CMakeLists.txt change INCLUDE_DIRS to correct paths
8. build\CMakeFiles\3.16.4\CMakeSystem.cmake: include(.../tools/cmake/toolchain-esp32.cmake) change to correct esp-idf directory. 
9. Espressif/esp-idf/components/esp-tls/CMakeLists.txt: change file esp_tls_wolfssl.c:
	if(CONFIG_ESP_TLS_USING_WOLFSSL)
    	list(APPEND srcs
       		"c:/Users/ilya/Eclipse/eclipse-workspace/ESPWait/components/my_server/esp_tls_wolfssl.c")
	endif()
10. Component my_server: correct CMakeLists.txt for true esp-idf version in
                    INCLUDE_DIRS "." "C:/Users/ilya/Espressif/esp-idf-v4.4/components/esp_http_server/src" "C:/Users/ilya/Espressif/esp-idf-v4.4/components/esp_http_server/src/port/esp32"
11. if installing on fresh chip:
	- component nvs_partition file CMakeLists.txt:
		for first write flash uncomment #esptool_py_flash_target_image(flash sx1276_params "0x3F0000" "${CMAKE_CURRENT_SOURCE_DIR}/sx1276_params.bin")
        - execute
		espefuse.py -p <port> set_flash_voltage 3.3V
